package presentacion;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import util.TextPrompt;
import daos.InventariosDAO;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import objetos_negocios.Inventario;

public class FrmAdministrarInventario extends javax.swing.JFrame {

    private InventariosDAO inventariosDAO;
    private TextPrompt texto;

    public FrmAdministrarInventario() {
        initComponents();
        this.inventariosDAO = new InventariosDAO();
        setLocationRelativeTo(null);
        asignarFechaHora();
        detallesCamposTexto();
        cargarInventarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblMarmoleria = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblHora = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableInventario = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        lblFecha1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblFecha2 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        lblFecha3 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        lblFecha4 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        lblFecha5 = new javax.swing.JLabel();
        comboBoxTipo = new javax.swing.JComboBox<>();
        lblFecha6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaDescripcion = new javax.swing.JTextArea();
        lblFecha8 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        comboBoxBusqueda = new javax.swing.JComboBox<>();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administrar Inventario");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        lblMarmoleria.setBackground(new java.awt.Color(204, 204, 204));
        lblMarmoleria.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblMarmoleria.setForeground(new java.awt.Color(204, 204, 204));
        lblMarmoleria.setText("MARMOLERIA San Martín Caballero");

        lblFecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha.setText("Fecha");

        lblHora.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblHora.setForeground(new java.awt.Color(255, 255, 255));
        lblHora.setText("Hora");

        lblUsuario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblUsuario.setForeground(new java.awt.Color(255, 255, 255));
        lblUsuario.setText("Usuario");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lblMarmoleria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsuario)
                    .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHora))
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(lblMarmoleria))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(lblUsuario))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblFecha)
                                .addGap(18, 18, 18)
                                .addComponent(lblHora)))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTableInventario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Marca", "Precio", "Cantidad", "Tipo", "Descripción"
            }
        ));
        jTableInventario.setFocusable(false);
        jTableInventario.setSelectionBackground(new java.awt.Color(255, 0, 51));
        jTableInventario.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTableInventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableInventarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableInventario);

        txtBuscar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btnEliminar.setBorderPainted(false);
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/consultar.png"))); // NOI18N
        btnConsultar.setBorderPainted(false);
        btnConsultar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/editar.png"))); // NOI18N
        btnEditar.setBorderPainted(false);
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        btnGuardar.setBorder(null);
        btnGuardar.setBorderPainted(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setBorderPainted(false);
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        lblFecha1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha1.setText("Nombre");

        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblFecha2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha2.setText("Marca");

        txtMarca.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblFecha3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha3.setText("Precio");

        txtPrecio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblFecha4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha4.setText("Cantidad");

        txtCantidad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblFecha5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha5.setText("Tipo");

        comboBoxTipo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        comboBoxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Material", "Herramienta" }));

        lblFecha6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha6.setText("Descripcion");

        txtAreaDescripcion.setColumns(20);
        txtAreaDescripcion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtAreaDescripcion.setRows(5);
        jScrollPane2.setViewportView(txtAreaDescripcion);

        lblFecha8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFecha8.setText("ID");

        txtID.setEditable(false);
        txtID.setBackground(new java.awt.Color(204, 204, 204));
        txtID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtID.setEnabled(false);

        comboBoxBusqueda.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        comboBoxBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Nombre", "Marca", "Precio", "Cantidad", "Tipo", "Descripcion" }));

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/menu.png"))); // NOI18N
        btnRegresar.setBorder(null);
        btnRegresar.setBorderPainted(false);
        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblFecha2)
                                    .addComponent(lblFecha1)
                                    .addComponent(lblFecha3)
                                    .addComponent(lblFecha4)
                                    .addComponent(lblFecha5)
                                    .addComponent(lblFecha8)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblFecha6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMarca)
                            .addComponent(txtPrecio)
                            .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCantidad)
                            .addComponent(comboBoxTipo, javax.swing.GroupLayout.Alignment.TRAILING, 0, 165, Short.MAX_VALUE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboBoxBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(comboBoxBusqueda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(12, 12, 12)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(77, 77, 77)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(41, 41, 41)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblFecha8)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblFecha1)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFecha2)
                                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblFecha3)
                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFecha4)
                                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblFecha5)
                                    .addComponent(comboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(90, 90, 90)
                                        .addComponent(lblFecha6)))
                                .addGap(69, 69, 69)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        validarCamposTexto();
        if (this.txtID.getText().isEmpty()) {
            insertarProducto();
        }

        this.limpiarCamposTexto();
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * Método para limpiar los campos de texto que se tienen en pantalla
     *
     * @param evt Evt que recibe
     */
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCamposTexto();
        cargarInventarios();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        //Abrir ventana menú principal
        FrmMenuPrincipal ventana = new FrmMenuPrincipal();
        ventana.setVisible(true);

        //Cerrar esta ventana
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void jTableInventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableInventarioMouseClicked
        try {
            int fila = jTableInventario.getSelectedRow();

            if (fila != -1) {

                //Asignar datos a los campos de texto
                txtID.setText(String.valueOf(jTableInventario.getValueAt(fila, 0)));
                txtNombre.setText(String.valueOf(jTableInventario.getValueAt(fila, 1)));
                txtMarca.setText(String.valueOf(jTableInventario.getValueAt(fila, 2)));
                txtPrecio.setText(String.valueOf(jTableInventario.getValueAt(fila, 3)));
                txtCantidad.setText(String.valueOf(jTableInventario.getValueAt(fila, 4)));
                txtAreaDescripcion.setText(String.valueOf(jTableInventario.getValueAt(fila, 6)));

                //Asingar al combo box
                if (String.valueOf(jTableInventario.getValueAt(fila, 5)).equalsIgnoreCase("Material")) {
                    comboBoxTipo.setSelectedIndex(0);
                } else {
                    comboBoxTipo.setSelectedIndex(1);
                }

            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_jTableInventarioMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarProducto();
        cargarInventarios();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        editarProducto();
        actualizarProducto();

        cargarInventarios();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        if (!txtBuscar.getText().isEmpty()) {
            String busqueda = comboBoxBusqueda.getSelectedItem().toString();
            String datos = txtBuscar.getText();

            consultarProductos(busqueda, datos);

        } else {
            JOptionPane.showMessageDialog(rootPane, "Ingrese información a buscar", "Fallo", 1);

        }

    }//GEN-LAST:event_btnConsultarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> comboBoxBusqueda;
    private javax.swing.JComboBox<String> comboBoxTipo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableInventario;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblFecha1;
    private javax.swing.JLabel lblFecha2;
    private javax.swing.JLabel lblFecha3;
    private javax.swing.JLabel lblFecha4;
    private javax.swing.JLabel lblFecha5;
    private javax.swing.JLabel lblFecha6;
    private javax.swing.JLabel lblFecha8;
    private javax.swing.JLabel lblHora;
    private javax.swing.JLabel lblMarmoleria;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTextArea txtAreaDescripcion;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    private void actualizarProducto() {
        Integer id = Integer.parseInt(this.txtID.getText());
        String nombre = this.txtNombre.getText();
        String marca = this.txtMarca.getText();
        String precio = this.txtPrecio.getText();
        String cantidad = this.txtCantidad.getText();
        String objetoInventario = (String) comboBoxTipo.getSelectedItem();
        String descripcion = this.txtAreaDescripcion.getText();

        Inventario inventario = new Inventario(id, nombre, marca, precio, cantidad, objetoInventario, descripcion);
        try {
            this.inventariosDAO.actualizar(inventario);
            JOptionPane.showMessageDialog(this, "Se actualizo correctamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "No fue posible actualizar el cliente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        }

        this.limpiarCamposTexto();
        this.cargarInventarios();
    }

    private void editarProducto() {
        int indiceFileSeleccionada = this.jTableInventario.getSelectedRow();
        if (indiceFileSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un producto", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        } else {
            DefaultTableModel modeloTabla = (DefaultTableModel) this.jTableInventario.getModel();
            Integer idInvetario = (Integer) modeloTabla.getValueAt(indiceFileSeleccionada, 0);
            Inventario inventario = this.inventariosDAO.consultarPorId(idInvetario);
//            if(inventario != null)
//            {
//                this.cargarInventario(inventario);
//            }
//            else
//            {
//                JOptionPane.showMessageDialog(this, "El producto seleccionado no existe", "Informacion", JOptionPane.INFORMATION_MESSAGE);
//            }
        }

    }

//    private void cargarInventario(Inventario inventario)
//    {
//                txtID.setText(inventario.getId_inventario().toString());
//                txtNombre.setText(inventario.getNombre());
//                txtMarca.setText(inventario.getMarca());
//                txtPrecio.setText(inventario.getPrecio());
//                txtCantidad.setText(inventario.getCantidad());
//                txtAreaDescripcion.setText(inventario.getDescripcion());
//    }
    private void eliminarProducto() {
        int indiceFileSeleccionada = this.jTableInventario.getSelectedRow();
        if (indiceFileSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un producto", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int opcionSeleccionada = JOptionPane.showConfirmDialog(this, "¿Estas seguro de eliminar el producto?", "Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (opcionSeleccionada == JOptionPane.YES_OPTION) {
                DefaultTableModel modeloTabla = (DefaultTableModel) this.jTableInventario.getModel();
                Integer idInventario = (Integer) modeloTabla.getValueAt(indiceFileSeleccionada, 0);
                this.inventariosDAO.eliminar(idInventario);
                this.cargarInventarios();
                JOptionPane.showMessageDialog(this, "Se elimino el prodcuto", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            }

        }
    }

    private void insertarProducto() {
        String nombre = this.txtNombre.getText();
        String marca = this.txtMarca.getText();
        String precio = this.txtPrecio.getText();
        String cantidad = this.txtCantidad.getText();
        String objetoInventario = (String) comboBoxTipo.getSelectedItem();
        String descripcion = this.txtAreaDescripcion.getText();
        Inventario inventario = new Inventario(nombre, marca, precio, cantidad, objetoInventario, descripcion);
        this.inventariosDAO.insertar(inventario);
        this.limpiarCamposTexto();
        this.cargarInventarios();
    }

    /**
     * Método que asigna la fecha y la hora a jlabels.
     */
    private void asignarFechaHora() {
        //Asignar fecha
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yy");
        String fechaFinal = dtf.format(LocalDateTime.now());
        lblFecha.setText(fechaFinal);

        //Asignar hora
        dtf = DateTimeFormatter.ofPattern("hh:mm a");
        String horaFinal = dtf.format(LocalDateTime.now());
        lblHora.setText(horaFinal);

    }

    public void cargarInventarios() {
        ArrayList<Inventario> inventarios = this.inventariosDAO.cosultar();
        DefaultTableModel modeloTabla = (DefaultTableModel) this.jTableInventario.getModel();
        modeloTabla.setRowCount(0);
        for (Inventario inventario : inventarios) {
            Object[] filaDatos = new Object[7];
            filaDatos[0] = inventario.getId_inventario();
            filaDatos[1] = inventario.getNombre();
            filaDatos[2] = inventario.getMarca();
            filaDatos[3] = inventario.getPrecio();
            filaDatos[4] = inventario.getCantidad();
            filaDatos[5] = inventario.getTipo();
            filaDatos[6] = inventario.getDescripcion();
            modeloTabla.addRow(filaDatos);
        }
    }

    /**
     * Método para limpiar los campos de texto
     */
    private void limpiarCamposTexto() {
        txtID.setText(null);
        txtNombre.setText(null);
        txtMarca.setText(null);
        txtPrecio.setText(null);
        txtCantidad.setText(null);
        txtAreaDescripcion.setText(null);
        txtBuscar.setText(null);
    }

    /**
     * Método para llenar los campos de texto con detalles
     */
    private void detallesCamposTexto() {
        texto = new TextPrompt("  ID", txtID);
        texto = new TextPrompt("  Ingrese nombre ", txtNombre);
        texto = new TextPrompt("  Ingrese marca ", txtMarca);
        texto = new TextPrompt("  $$$$", txtPrecio);
        texto = new TextPrompt("  Ingrese cantidad", txtCantidad);
        texto = new TextPrompt("  Añada \ndescripción", txtAreaDescripcion);
        texto = new TextPrompt("  Información de busqueda", txtBuscar);

    }

    /**
     * Método para validar que una cadena es valida para ser entero
     *
     * @param cadena string que se validara
     * @return true en caso de que se pueda convertir, falso en caso contrario
     */
    private boolean esEntero(String cadena) {
        try {
            Integer.parseInt(cadena);
            return true;
        } catch (NumberFormatException nfe) {
            return false;
        }
    }

    /**
     * Método para validar que una cadena es valida para ser flotante
     *
     * @param cadena string que se validara
     * @return true en caso de que se pueda convertir, falso en caso contrario
     */
    private boolean esFlotante(String cadena) {
        try {
            Float.parseFloat(cadena);
            return true;
        } catch (NumberFormatException nfe) {
            return false;
        }
    }

    /**
     * Método para validar la información de los campos de texto
     */
    private void validarCamposTexto() {
        if (!txtNombre.getText().isEmpty()) {
            if (!txtMarca.getText().isEmpty()) {
                if (!txtPrecio.getText().isEmpty()) {
                    if (esFlotante(txtPrecio.getText())) {
                        if (!txtCantidad.getText().isEmpty()) {
                            if (esEntero(txtCantidad.getText())) {
                                if (!txtAreaDescripcion.getText().isEmpty()) {
                                    //Todo bien todo correcto
                                    JOptionPane.showMessageDialog(rootPane, "Todo corrrecto ", "Exito", 1);

                                } else {
                                    JOptionPane.showMessageDialog(rootPane, "Descripción se encuentra vacío", "Error", 2);
                                }

                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Cantidad solo acepta números", "Error", 2);
                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Cantidad se encuentra vacío", "Error", 2);

                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Precio solo acepta números", "Error", 2);

                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Precio se encuentra vacío", "Error", 2);

                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Marca se encuentra vacío", "Error", 2);

            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Nombre se encuentra vacío", "Error", 2);

        }
    }

    public void consultarProductos(String comboBox, String dato) {
        ArrayList<Inventario> inventarios = this.inventariosDAO.consultaEspecifica(comboBox, dato);

        if (inventarios.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No se encontraron coincidencias de busqueda", "Consulta", 2);

        } else {
            DefaultTableModel modeloTabla = (DefaultTableModel) this.jTableInventario.getModel();
            modeloTabla.setRowCount(0);
            for (Inventario inventario : inventarios) {
                Object[] filaDatos = new Object[7];
                filaDatos[0] = inventario.getId_inventario();
                filaDatos[1] = inventario.getNombre();
                filaDatos[2] = inventario.getMarca();
                filaDatos[3] = inventario.getPrecio();
                filaDatos[4] = inventario.getCantidad();
                filaDatos[5] = inventario.getTipo();
                filaDatos[6] = inventario.getDescripcion();
                modeloTabla.addRow(filaDatos);
            }
        }
    }

//    private void pruebaLlenarTabla() {
//        this.jTableInventario.setValueAt(1, 0, 0);
//        this.jTableInventario.setValueAt(1, 0, 1);
//        this.jTableInventario.setValueAt(1, 0, 2);
//        this.jTableInventario.setValueAt(1, 0, 3);
//        this.jTableInventario.setValueAt(1, 0, 4);
//        this.jTableInventario.setValueAt("Material", 0, 5);
//        this.jTableInventario.setValueAt(1, 0, 6);
//
//        this.jTableInventario.setValueAt(2, 1, 0);
//        this.jTableInventario.setValueAt(2, 1, 1);
//        this.jTableInventario.setValueAt(2, 1, 2);
//        this.jTableInventario.setValueAt(2, 1, 3);
//        this.jTableInventario.setValueAt(2, 1, 4);
//        this.jTableInventario.setValueAt("Herramienta", 1, 5);
//        this.jTableInventario.setValueAt(2, 1, 6);
//
//    }
}
